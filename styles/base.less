@import "colors";
@import "syntax-variables";

.syntax--html {
  -webkit-font-smoothing: subpixel-antialiased;
}
 .scroll-view {
   background-color: @syntax-background-color;
 }

atom-text-editor,
atom-text-editor {
  background-color: @syntax-background-color;
  color:            @syntax-text-color;

  .invisible-character {
    color:          @syntax-invisible-character-color;
  }

  .indent-guide {
    color:            @syntax-indent-guide-color;
  }

  .gutter {
    background-color: @syntax-gutter-background-color;
    color:            @syntax-gutter-text-color;
  }

  .gutter .line-number {
    opacity: 1;
  }

  .gutter .line-number.folded,
  .gutter .line-number:after,
  .fold-marker:after {
    color: @magenta;
  }

  .cursor {
    border-color: @syntax-cursor-color;
  }

  .selection .region {
    background-color: @syntax-selection-color;
  }

  .line-number.cursor-line {
    background-color: @syntax-gutter-background-color-selected;
  }
}

.bracket-matcher .region {
  background-color: @base1;
  opacity: 0.5;
}

.syntax--comment {
  color: @base1;
  font-style: italic;
}

.syntax--entity {
  color: @yellow;
}

.syntax--keyword {
  color: @green;
}

.syntax--storage, .syntax--type {
  color: @green;
}

@constant-color: @yellow;

.syntax--constant {
  color: @constant-color;

  &.syntax--numeric {
    color: spin(@constant-color, -20%);
  }

  &.syntax--boolean {
    color: spin(@constant-color, 20%);
  }

  &.syntax--language {
    color: @orange;
  }

  &.syntax--character,
  &.syntax--other {
    color: darken(spin(@constant-color, 60%), 20%);
  }

  &.syntax--symbol {
    color: spin(@constant-color, 80%);
  }

  &.syntax--numeric.line-number.syntax--find-in-files .syntax--match {
    color: rgba(143, 190, 0, 0.63);
  }
}

.syntax--variable {
  color: @blue;
}

.syntax--delimiter, .syntax--brace {
  color: @red;
}

.syntax--delimiter.syntax--period {
  color: @green;
}

.syntax--invalid.syntax--deprecated {
  text-decoration: underline;
  color: @red;
}

.syntax--invalid.syntax--illegal {
  color: @red;
}

@string-color: @cyan;

.syntax--string {
  color: @string-color;

  .syntax--constant.syntax--character.syntax--escape {
    color: @red;
  }

  &.syntax--regexp {
    color: @cyan;

    .syntax--source.syntax--ruby.syntax--embedded,
    .syntax--string.syntax--regexp.syntax--arbitrary-repitition {
      color: @red;
    }
  }
}

@string-interp: saturate(spin(@string-color, 50%), 20%);
@string-punct: darken(@red, 10%);

// String interpolation in Ruby, CoffeeScript, and others
.syntax--source .syntax--string {
  .syntax--source,
  .syntax--meta.syntax--embedded.line {
    color: @string-interp;
  }

  .syntax--punctuation.syntax--section.syntax--embedded {
    color: @string-punct;

    .syntax--source {
      color: @string-punct;  // Required for the end of embedded strings in Ruby #716
    }
  }
}
